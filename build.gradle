apply plugin: 'maven'
apply plugin: 'kotlin'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

allprojects {
    group = 'net.alexanderkahn.service.commons'
    version = '0.0.14-SNAPSHOT'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            javaParameters = true
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            javaParameters = true
        }
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
        }
    }


    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }
}


description = """"""

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    compile group: 'com.google.code.gson', name: 'gson', version: gsonVersion
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: servletApiVersion
    compile(group: 'io.jsonwebtoken', name: 'jjwt', version: jjwtVersion) {
        exclude(module: 'jackson-databind')
    }
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlinVersion
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: springBootVersion
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
    testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion

}